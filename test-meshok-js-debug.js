const puppeteer = require('puppeteer');

async function testMeshokJSDebug() {
    try {
        console.log('üîç –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Chrome —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º...');
        
        const browser = await puppeteer.connect({
            browserURL: 'http://localhost:9222'
        });

        const page = await browser.newPage();
        
        // –í–∫–ª—é—á–∞–µ–º JavaScript –∏ cookies
        await page.setJavaScriptEnabled(true);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º user agent
        await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36');
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ Meshok
        console.log('ü™ô –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ Meshok...');
        await page.goto('https://meshok.net/good/252', {
            waitUntil: 'networkidle2',
            timeout: 60000
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ JavaScript
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º JavaScript...');
        const jsTest = await page.evaluate(() => {
            return {
                hasWindow: typeof window !== 'undefined',
                hasDocument: typeof document !== 'undefined',
                hasConsole: typeof console !== 'undefined',
                userAgent: navigator.userAgent,
                title: document.title,
                url: window.location.href,
                hasApp: !!document.querySelector('#app'),
                appContent: document.querySelector('#app')?.innerHTML || '',
                hasScripts: document.querySelectorAll('script').length,
                hasModules: document.querySelectorAll('script[type="module"]').length
            };
        });
        
        console.log('üìä JAVASCRIPT –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:');
        console.log('Window –¥–æ—Å—Ç—É–ø–µ–Ω:', jsTest.hasWindow);
        console.log('Document –¥–æ—Å—Ç—É–ø–µ–Ω:', jsTest.hasDocument);
        console.log('Console –¥–æ—Å—Ç—É–ø–µ–Ω:', jsTest.hasConsole);
        console.log('User Agent:', jsTest.userAgent);
        console.log('Title:', jsTest.title);
        console.log('URL:', jsTest.url);
        console.log('–ï—Å—Ç—å #app:', jsTest.hasApp);
        console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ script —Ç–µ–≥–æ–≤:', jsTest.hasScripts);
        console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ module —Å–∫—Ä–∏–ø—Ç–æ–≤:', jsTest.hasModules);
        console.log('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ #app:', jsTest.appContent);
        
        // –ñ–¥–µ–º –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ
        console.log('‚è≥ –ñ–¥–µ–º 15 —Å–µ–∫—É–Ω–¥...');
        await new Promise(resolve => setTimeout(resolve, 15000));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
        const jsTest2 = await page.evaluate(() => {
            return {
                appContent: document.querySelector('#app')?.innerHTML || '',
                appText: document.querySelector('#app')?.textContent || '',
                hasSplashscreen: !!document.querySelector('.splashscreen'),
                splashscreenHidden: document.querySelector('.splashscreen')?.classList.contains('splashscreen--hidden') || false
            };
        });
        
        console.log('üìä –ü–û–°–õ–ï 15 –°–ï–ö–£–ù–î:');
        console.log('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ #app:', jsTest2.appContent);
        console.log('–¢–µ–∫—Å—Ç #app:', jsTest2.appText);
        console.log('–ï—Å—Ç—å splashscreen:', jsTest2.hasSplashscreen);
        console.log('Splashscreen —Å–∫—Ä—ã—Ç:', jsTest2.splashscreenHidden);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    }
}

testMeshokJSDebug();
