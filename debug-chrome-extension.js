const puppeteer = require('puppeteer');

async function debugChromeExtension() {
    try {
        console.log('üîç –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Chrome —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º...');
        
        const browser = await puppeteer.connect({
            browserURL: 'http://localhost:9222'
        });

        const page = await browser.newPage();
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ Meshok
        console.log('ü™ô –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ Meshok...');
        await page.goto('https://meshok.net/good/252');
        
        // –ñ–¥–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        console.log('‚è≥ –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥...');
        await new Promise(resolve => setTimeout(resolve, 10000));
        
        const status = await page.evaluate(() => {
            return {
                title: document.title,
                url: window.location.href,
                hasApp: !!document.querySelector('#app'),
                hasCloudflare: document.body.textContent.includes('Just a moment'),
                hasMeshok: document.body.textContent.includes('meshok'),
                bodyLength: document.body.textContent.length,
                appContent: document.querySelector('#app')?.innerHTML || '',
                hasScripts: document.querySelectorAll('script').length
            };
        });
        
        console.log('üìä –°–¢–ê–¢–£–° CHROME:');
        console.log('Title:', status.title);
        console.log('URL:', status.url);
        console.log('–ï—Å—Ç—å #app:', status.hasApp);
        console.log('–ï—Å—Ç—å Cloudflare:', status.hasCloudflare);
        console.log('–ï—Å—Ç—å Meshok:', status.hasMeshok);
        console.log('–î–ª–∏–Ω–∞ body:', status.bodyLength);
        console.log('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ #app:', status.appContent);
        console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫—Ä–∏–ø—Ç–æ–≤:', status.hasScripts);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
        const extensionStatus = await page.evaluate(() => {
            return {
                hasChrome: typeof chrome !== 'undefined',
                hasRuntime: typeof chrome !== 'undefined' && chrome.runtime,
                extensions: typeof chrome !== 'undefined' && chrome.runtime ? chrome.runtime.id : null
            };
        });
        
        console.log('üìä –°–¢–ê–¢–£–° –†–ê–°–®–ò–†–ï–ù–ò–Ø:');
        console.log('Chrome API:', extensionStatus.hasChrome);
        console.log('Runtime:', extensionStatus.hasRuntime);
        console.log('Extension ID:', extensionStatus.extensions);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    }
}

debugChromeExtension();
