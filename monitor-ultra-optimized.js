const fs = require('fs');

function monitorUltraOptimized() {
    console.log('üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì –£–õ–¨–¢–†–ê-–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–û–ì–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø');
    console.log('='.repeat(60));
    
    try {
        if (fs.existsSync('ultra_optimized_analysis.json')) {
            const analysis = JSON.parse(fs.readFileSync('ultra_optimized_analysis.json', 'utf8'));
            console.log(`üìã –í—Å–µ–≥–æ –ª–æ—Ç–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${analysis.critical}`);
            console.log(`üéØ –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏: ${analysis.savingsPercent}%`);
            console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º VF/XF/AU: ${analysis.skip} –ª–æ—Ç–æ–≤`);
        }
        
        if (fs.existsSync('ultra_optimized_progress.json')) {
            const progress = JSON.parse(fs.readFileSync('ultra_optimized_progress.json', 'utf8'));
            
            const elapsed = Math.round((Date.now() - new Date(progress.timestamp).getTime()) / 1000);
            const rate = progress.processed > 0 ? (progress.processed / elapsed * 60).toFixed(1) : 0;
            
            console.log(`\nüìä –¢–ï–ö–£–©–ò–ô –ü–†–û–ì–†–ï–°–°:`);
            console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${progress.updated}`);
            console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${progress.skipped}`);
            console.log(`‚ùå –û—à–∏–±–æ–∫: ${progress.errors}`);
            console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${progress.processed}`);
            console.log(`üöÄ –°–∫–æ—Ä–æ—Å—Ç—å: ${rate} –ª–æ—Ç–æ–≤/–º–∏–Ω`);
            console.log(`‚è∞ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${new Date(progress.timestamp).toLocaleString()}`);
            
            if (fs.existsSync('ultra_optimized_analysis.json')) {
                const analysis = JSON.parse(fs.readFileSync('ultra_optimized_analysis.json', 'utf8'));
                const remaining = analysis.critical - progress.processed;
                const eta = remaining > 0 && rate > 0 ? Math.round(remaining / rate) : 0;
                const etaHours = Math.floor(eta / 60);
                const etaMinutes = eta % 60;
                
                console.log(`\n‚è≥ –û–°–¢–ê–õ–û–°–¨: ${remaining} –ª–æ—Ç–æ–≤`);
                console.log(`üïê –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: ${etaHours}—á ${etaMinutes}–º`);
                
                const progressPercent = (progress.processed / analysis.critical * 100).toFixed(1);
                console.log(`üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: ${progressPercent}%`);
            }
        } else {
            console.log('‚ö†Ô∏è –§–∞–π–ª –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–∫—Ä–∏–ø—Ç –µ—â–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É.');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤:', error.message);
    }
}

monitorUltraOptimized();
