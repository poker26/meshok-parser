const http = require('http');

async function testImageApi() {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...\n');

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–≤–µ—Ä—Å–∞ –¥–ª—è ID 93
    const testUrl = 'http://localhost:3000/api/catalog/coins/93/image/avers';
    
    console.log(`üì° –ó–∞–ø—Ä–æ—Å: ${testUrl}`);
    
    const options = {
        hostname: 'localhost',
        port: 3000,
        path: '/api/catalog/coins/93/image/avers',
        method: 'GET'
    };

    const req = http.request(options, (res) => {
        console.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${res.statusCode}`);
        console.log(`üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏:`, res.headers);
        
        if (res.statusCode === 200) {
            console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
            
            let data = '';
            res.on('data', (chunk) => {
                data += chunk;
            });
            
            res.on('end', () => {
                console.log(`üìè –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: ${data.length} –±–∞–π—Ç`);
                console.log(`üîç –ü–µ—Ä–≤—ã–µ 50 —Å–∏–º–≤–æ–ª–æ–≤: ${data.substring(0, 50)}`);
            });
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
        }
    });

    req.on('error', (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
    });

    req.end();
}

testImageApi();
