/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ CollectionPriceService —Å ImprovedPredictionsGenerator
 */

const CollectionPriceService = require('./collection-price-service');

async function testCollectionPriceService() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π CollectionPriceService...');
    
    try {
        const service = new CollectionPriceService();
        await service.init();
        
        // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–æ–Ω–µ—Ç—ã 15 —Ä—É–±–ª–µ–π 1897 –≥–æ–¥–∞ (–ª–æ—Ç 6 –∞—É–∫—Ü–∏–æ–Ω–∞ 969)
        const testLot = {
            id: 63219, // ID –ª–æ—Ç–∞ 6 –∞—É–∫—Ü–∏–æ–Ω–∞ 969
            lot_number: '6',
            auction_number: '969',
            condition: 'MS63',
            metal: 'Au',
            weight: 12.9,
            year: 1897,
            letters: '–ê–ì',
            coin_description: '15 —Ä—É–±–ª–µ–π. –†–û–°–°. NGS —Ä—É—Å—Å–∫–∏–π 1897–≥. –ê–ì. Au. | –í —Å–ª–∞–±–µ NGS. –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–∏–π –º–æ–Ω–µ—Ç–Ω—ã–π –¥–≤–æ—Ä. –ë–∏—Ç–∫–∏–Ω ‚Ññ# 934.2, —Ç–∏—Ä–∞–∂ 11 900 033, "—Ç—Ä–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –±—É–∫–≤—ã –∑–∞—Ö–æ–¥—è—Ç –∑–∞ –æ–±—Ä–µ–∑ —à–µ–∏", –£–∑–¥–µ–Ω–∏–∫–æ–≤ —Ä–µ–¥–∫–æ—Å—Ç—å - "—Ç–æ—á–∫–∞", ‚Ññ# 0322; –ö–∞–∑–∞–∫–æ–≤ —Ä–µ–¥–∫–æ—Å—Ç—å R –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç–∏ XF, Unc, ‚Ññ# 63, —Ä–µ–π—Ç–∏–Ω–≥ 4. –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–±–∞ - Au`900, –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –≤–µ—Å - 12,90 –≥—Ä, —á–∏—Å—Ç–æ–≥–æ –∑–æ–ª–æ—Ç–∞ - 11,61 –≥—Ä. Wolmar # 4/3'
        };
        
        console.log('üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:', testLot);
        
        // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑
        const prediction = await service.predictPrice(testLot);
        
        console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è:');
        console.log(`  predictedPrice: ${prediction.predictedPrice}`);
        console.log(`  metalValue: ${prediction.metalValue}`);
        console.log(`  numismaticPremium: ${prediction.numismaticPremium}`);
        console.log(`  conditionMultiplier: ${prediction.conditionMultiplier}`);
        console.log(`  confidence: ${prediction.confidence}`);
        console.log(`  method: ${prediction.method}`);
        
        // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –æ–∂–∏–¥–∞–µ–º—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º (231,802‚ÇΩ)
        const expectedPrice = 231802;
        const difference = Math.abs(prediction.predictedPrice - expectedPrice);
        const accuracy = ((1 - difference / expectedPrice) * 100).toFixed(1);
        
        console.log(`\nüéØ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –æ–∂–∏–¥–∞–µ–º—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º:`);
        console.log(`  –û–∂–∏–¥–∞–µ–º–∞—è —Ü–µ–Ω–∞: ${expectedPrice}‚ÇΩ`);
        console.log(`  –ü–æ–ª—É—á–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞: ${prediction.predictedPrice}‚ÇΩ`);
        console.log(`  –†–∞–∑–Ω–∏—Ü–∞: ${difference}‚ÇΩ`);
        console.log(`  –¢–æ—á–Ω–æ—Å—Ç—å: ${accuracy}%`);
        
        if (difference < 1000) {
            console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –±–ª–∏–∑–æ–∫ –∫ –æ–∂–∏–¥–∞–µ–º–æ–º—É!');
        } else {
            console.log('‚ö†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–≥–æ');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    }
}

testCollectionPriceService();
