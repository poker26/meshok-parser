const CatalogParser = require('./catalog-parser.js');

async function testFullParsing() {
    const parser = new CatalogParser();
    
    try {
        await parser.init();
        
        // –¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–æ–Ω–µ—Ç—ã "50 —Ä—É–±–ª–µ–π" —Å –≤–µ—Å–æ–º
        const testDescription = "50 —Ä—É–±–ª–µ–π. –°–æ—Ñ–∏–π—Å–∫–∏–π —Å–æ–±–æ—Ä –≤ –ù–æ–≤–≥–æ—Ä–æ–¥–µ 1988–≥. –ú–ú–î. Au 7,78. | –¢–∏—Ä–∞–∂: 25 000. 900 –ø—Ä–æ–±–∞. –î–∏–∞–º–µ—Ç—Ä 22,6 –º–º.";
        
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞...\n');
        console.log(`üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${testDescription}\n`);
        
        // –ü–∞—Ä—Å–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ
        const parsedData = parser.parseLotDescription(testDescription);
        
        console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞:');
        console.log(`  - –ú–µ—Ç–∞–ª–ª: ${parsedData.metal || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
        console.log(`  - –í–µ—Å –º–æ–Ω–µ—Ç—ã: ${parsedData.coin_weight || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}–≥`);
        console.log(`  - –ü—Ä–æ–±–∞: ${parsedData.fineness || '–Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}`);
        console.log(`  - –ß–∏—Å—Ç—ã–π –º–µ—Ç–∞–ª–ª: ${parsedData.pure_metal_weight || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}–≥`);
        console.log(`  - –í–µ—Å –≤ —É–Ω—Ü–∏—è—Ö: ${parsedData.weight_oz || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}oz`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ undefined
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö:');
        console.log(`  - coin_weight type: ${typeof parsedData.coin_weight}, value: ${parsedData.coin_weight}`);
        console.log(`  - fineness type: ${typeof parsedData.fineness}, value: ${parsedData.fineness}`);
        console.log(`  - pure_metal_weight type: ${typeof parsedData.pure_metal_weight}, value: ${parsedData.pure_metal_weight}`);
        console.log(`  - weight_oz type: ${typeof parsedData.weight_oz}, value: ${parsedData.weight_oz}`);
        
        console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    } finally {
        await parser.close();
    }
}

testFullParsing();


