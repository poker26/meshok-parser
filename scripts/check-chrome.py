#!/usr/bin/env python3

import sys
import os
import subprocess
import shutil

def check_chrome():
    print('üîç Checking Chrome installation...')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è Chrome
    chrome_paths = [
        '/usr/bin/google-chrome',
        '/usr/bin/google-chrome-stable',
        '/usr/bin/chromium-browser',
        '/usr/bin/chromium',
        '/snap/bin/chromium',
        '/usr/bin/chrome',
        '/opt/google/chrome/chrome'
    ]
    
    chrome_found = False
    chrome_path = None
    
    for path in chrome_paths:
        if os.path.exists(path):
            print(f'‚úÖ Found Chrome at: {path}')
            chrome_found = True
            chrome_path = path
            break
    
    if not chrome_found:
        print('‚ùå Chrome not found in standard locations')
        
        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —á–µ—Ä–µ–∑ which
        try:
            result = subprocess.run(['which', 'google-chrome'], capture_output=True, text=True)
            if result.returncode == 0:
                chrome_path = result.stdout.strip()
                print(f'‚úÖ Found Chrome via which: {chrome_path}')
                chrome_found = True
        except:
            pass
        
        try:
            result = subprocess.run(['which', 'chromium-browser'], capture_output=True, text=True)
            if result.returncode == 0:
                chrome_path = result.stdout.strip()
                print(f'‚úÖ Found Chromium via which: {chrome_path}')
                chrome_found = True
        except:
            pass
    
    if not chrome_found:
        print('‚ùå Chrome not found anywhere')
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Chrome
    try:
        result = subprocess.run([chrome_path, '--version'], capture_output=True, text=True)
        if result.returncode == 0:
            print(f'üìä Chrome version: {result.stdout.strip()}')
        else:
            print(f'‚ö†Ô∏è  Could not get Chrome version: {result.stderr}')
    except Exception as e:
        print(f'‚ö†Ô∏è  Error getting Chrome version: {e}')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å Chrome –≤ headless —Ä–µ–∂–∏–º–µ
    try:
        print('üß™ Testing Chrome headless mode...')
        result = subprocess.run([
            chrome_path,
            '--headless',
            '--no-sandbox',
            '--disable-gpu',
            '--disable-dev-shm-usage',
            '--dump-dom',
            'https://example.com'
        ], capture_output=True, text=True, timeout=10)
        
        if result.returncode == 0:
            print('‚úÖ Chrome headless mode works')
            print(f'üìä Output size: {len(result.stdout)} characters')
        else:
            print(f'‚ùå Chrome headless mode failed: {result.stderr}')
    except subprocess.TimeoutExpired:
        print('‚ö†Ô∏è  Chrome headless test timed out')
    except Exception as e:
        print(f'‚ùå Error testing Chrome: {e}')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º ChromeDriver
    print('\nüîç Checking ChromeDriver...')
    try:
        result = subprocess.run(['chromedriver', '--version'], capture_output=True, text=True)
        if result.returncode == 0:
            print(f'‚úÖ ChromeDriver found: {result.stdout.strip()}')
        else:
            print('‚ùå ChromeDriver not found')
    except:
        print('‚ùå ChromeDriver not found')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ –±—Ä–∞—É–∑–µ—Ä—ã –¥–æ—Å—Ç—É–ø–Ω—ã
    print('\nüîç Available browsers:')
    browsers = ['google-chrome', 'chromium-browser', 'chromium', 'firefox', 'safari']
    for browser in browsers:
        if shutil.which(browser):
            print(f'‚úÖ {browser}: {shutil.which(browser)}')
        else:
            print(f'‚ùå {browser}: not found')
    
    return chrome_found

if __name__ == '__main__':
    check_chrome()
