const http = require('http');

async function testCoinsApi() {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –º–æ–Ω–µ—Ç...\n');

    const options = {
        hostname: 'localhost',
        port: 3000,
        path: '/api/catalog/coins?limit=1',
        method: 'GET'
    };

    const req = http.request(options, (res) => {
        console.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${res.statusCode}`);
        
        let data = '';
        res.on('data', (chunk) => {
            data += chunk;
        });
        
        res.on('end', () => {
            try {
                const result = JSON.parse(data);
                console.log('üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:');
                console.log(`  - –í—Å–µ–≥–æ –º–æ–Ω–µ—Ç: ${result.total || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`);
                console.log(`  - –ú–æ–Ω–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${result.coins ? result.coins.length : '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`);
                
                if (result.coins && result.coins.length > 0) {
                    const coin = result.coins[0];
                    console.log('\nüìã –ü–µ—Ä–≤–∞—è –º–æ–Ω–µ—Ç–∞:');
                    console.log(`  - ID: ${coin.id}`);
                    console.log(`  - –ù–∞–∑–≤–∞–Ω–∏–µ: ${coin.coin_name}`);
                    console.log(`  - has_avers_image: ${coin.has_avers_image}`);
                    console.log(`  - has_revers_image: ${coin.has_revers_image}`);
                    console.log(`  - avers_image: ${coin.avers_image || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`);
                    console.log(`  - revers_image: ${coin.revers_image || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`);
                }
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', error.message);
                console.log('üìÑ –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ:', data.substring(0, 200));
            }
        });
    });

    req.on('error', (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
    });

    req.end();
}

testCoinsApi();






