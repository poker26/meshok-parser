const { Pool } = require('pg');
const config = require('./config');

const pool = new Pool(config.dbConfig);

async function clearPredictionsForAuction(auctionNumber) {
    try {
        console.log(`üßπ –û—á–∏—â–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑—ã –¥–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞ ${auctionNumber}...`);
        
        // –ü–æ–ª—É—á–∞–µ–º ID –≤—Å–µ—Ö –ª–æ—Ç–æ–≤ –∞—É–∫—Ü–∏–æ–Ω–∞
        const lotsQuery = `
            SELECT id FROM auction_lots WHERE auction_number = $1
        `;
        const lotsResult = await pool.query(lotsQuery, [auctionNumber]);
        const lotIds = lotsResult.rows.map(row => row.id);
        
        if (lotIds.length === 0) {
            console.log('‚ùå –õ–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }
        
        console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${lotIds.length} –ª–æ—Ç–æ–≤`);
        
        // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–≥–Ω–æ–∑—ã –¥–ª—è —ç—Ç–∏—Ö –ª–æ—Ç–æ–≤
        const deleteQuery = `
            DELETE FROM lot_price_predictions 
            WHERE lot_id = ANY($1)
        `;
        
        const deleteResult = await pool.query(deleteQuery, [lotIds]);
        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${deleteResult.rowCount} –ø—Ä–æ–≥–Ω–æ–∑–æ–≤`);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤:', error);
    } finally {
        await pool.end();
    }
}

const auctionNumber = process.argv[2] || '968';
clearPredictionsForAuction(auctionNumber);
