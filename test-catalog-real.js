const CatalogParser = require('./catalog-parser');

async function testRealDatabase() {
    const parser = new CatalogParser();
    
    try {
        console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        await parser.init();
        
        console.log('üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ª–æ—Ç–æ–≤...');
        const client = await parser.pool.connect();
        
        // –ü–æ–ª—É—á–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ª–æ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        const result = await client.query(`
            SELECT id, auction_number, lot_number, coin_description, 
                   avers_image_url, revers_image_url
            FROM auction_lots 
            WHERE coin_description IS NOT NULL 
            AND coin_description != ''
            AND coin_description LIKE '%–≥.%'
            ORDER BY auction_number DESC, lot_number ASC
            LIMIT 30
        `);
        
        client.release();
        
        console.log(`–ù–∞–π–¥–µ–Ω–æ ${result.rows.length} –ª–æ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n`);
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∫–∞–∂–¥–æ–≥–æ –ª–æ—Ç–∞
        for (let i = 0; i < result.rows.length; i++) {
            const lot = result.rows[i];
            console.log(`\n${'='.repeat(80)}`);
            console.log(`–õ–æ—Ç ${i + 1}/${result.rows.length}: ${lot.auction_number}-${lot.lot_number}`);
            console.log(`${'='.repeat(80)}`);
            
            console.log('–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:');
            console.log(lot.coin_description);
            console.log('\n–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞:');
            
            const parsed = parser.parseLotDescription(lot.coin_description);
            console.log(JSON.stringify(parsed, null, 2));
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            if (lot.avers_image_url) {
                console.log(`\n–ê–≤–µ—Ä—Å: ${lot.avers_image_url}`);
            }
            if (lot.revers_image_url) {
                console.log(`–†–µ–≤–µ—Ä—Å: ${lot.revers_image_url}`);
            }
        }
        
        console.log(`\n${'='.repeat(80)}`);
        console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        console.log(`${'='.repeat(80)}`);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    } finally {
        await parser.close();
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testRealDatabase();
