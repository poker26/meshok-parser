const { Pool } = require('pg');
const config = require('./config');

const pool = new Pool(config.dbConfig);

async function findLotsWithWeight() {
    const client = await pool.connect();
    
    try {
        console.log('üîç –ü–æ–∏—Å–∫ –ª–æ—Ç–æ–≤ —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –≤–µ—Å–∞...\n');
        
        // –ò—â–µ–º –ª–æ—Ç—ã —Å –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∞–ª–ª–∞–º–∏ –ò —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –≤–µ—Å–∞
        const query = `
            SELECT id, coin_description, auction_number, lot_number
            FROM auction_lots
            WHERE (coin_description ILIKE '%Au%' OR coin_description ILIKE '%Ag%' OR coin_description ILIKE '%Pt%' OR coin_description ILIKE '%Pd%')
            AND (
                coin_description ILIKE '%–≤–µ—Å%' OR 
                coin_description ILIKE '%–≥—Ä%' OR 
                coin_description ILIKE '%oz%' OR
                coin_description ~* '(Au|Ag|Pt|Pd)\\s+\\d+(?:,\\d+)?' OR
                coin_description ~* '\\d+\\s*–ø—Ä–æ–±[–∞—ã]'
            )
            AND coin_description IS NOT NULL 
            AND coin_description != ''
            ORDER BY id
            LIMIT 20;
        `;
        
        const result = await client.query(query);
        
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ª–æ—Ç–æ–≤ —Å –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∞–ª–ª–∞–º–∏ –ò –≤–µ—Å–æ–º: ${result.rows.length}\n`);
        
        for (const [index, lot] of result.rows.entries()) {
            console.log(`--- –õ–æ—Ç ${index + 1} ---`);
            console.log(`ID: ${lot.id}, –ê—É–∫—Ü–∏–æ–Ω: ${lot.auction_number}, –õ–æ—Ç: ${lot.lot_number}`);
            console.log(`–û–ø–∏—Å–∞–Ω–∏–µ: ${lot.coin_description}`);
            
            // –í—ã–¥–µ–ª—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤–µ—Å–∞
            const weightMentions = lot.coin_description.match(/\b(–≤–µ—Å|–≥—Ä|oz|Au\s+\d+|Ag\s+\d+|Pt\s+\d+|Pd\s+\d+|\d+\s*–ø—Ä–æ–±[–∞—ã])\b/gi);
            if (weightMentions) {
                console.log(`üéØ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤–µ—Å–∞: ${weightMentions.join(', ')}`);
            }
            console.log('');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ª–æ—Ç–æ–≤ —Å –≤–µ—Å–æ–º:', error);
    } finally {
        client.release();
        await pool.end();
    }
}

findLotsWithWeight();
