const { Pool } = require('pg');
const config = require('./config');
const CatalogParser = require('./catalog-parser.js');

const pool = new Pool(config.dbConfig);

async function updateExistingWeightRecords() {
    const parser = new CatalogParser();
    
    try {
        await parser.init();
        
        const client = await pool.connect();
        
        console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π —Å –ø–æ–ª—è–º–∏ –≤–µ—Å–∞...\n');
        
        // –ù–∞—Ö–æ–¥–∏–º –∑–∞–ø–∏—Å–∏ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –≤–µ—Å–∞ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏, –Ω–æ –±–µ–∑ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π –≤–µ—Å–∞
        const query = `
            SELECT id, coin_name, metal, original_description
            FROM coin_catalog 
            WHERE (original_description ILIKE '%Au %' OR original_description ILIKE '%Ag %' OR original_description ILIKE '%Pt %' OR original_description ILIKE '%Pd %')
            AND (coin_weight IS NULL OR fineness IS NULL OR pure_metal_weight IS NULL)
            LIMIT 10
        `;
        
        const result = await client.query(query);
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${result.rows.length}\n`);
        
        for (const [index, row] of result.rows.entries()) {
            console.log(`--- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ${index + 1}/${result.rows.length} ---`);
            console.log(`ID: ${row.id}, –ù–∞–∑–≤–∞–Ω–∏–µ: ${row.coin_name}`);
            console.log(`–û–ø–∏—Å–∞–Ω–∏–µ: ${row.original_description.substring(0, 100)}...`);
            
            // –ü–∞—Ä—Å–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω–æ–≤–æ
            const parsedData = parser.parseLotDescription(row.original_description);
            
            console.log(`–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:`);
            console.log(`  - –í–µ—Å: ${parsedData.coin_weight || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}–≥`);
            console.log(`  - –ü—Ä–æ–±–∞: ${parsedData.fineness || '–Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}`);
            console.log(`  - –ß–∏—Å—Ç—ã–π –º–µ—Ç–∞–ª–ª: ${parsedData.pure_metal_weight || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}–≥`);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å, –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≤–µ—Å–µ
            if (parsedData.coin_weight || parsedData.fineness || parsedData.pure_metal_weight) {
                const updateQuery = `
                    UPDATE coin_catalog 
                    SET coin_weight = $1,
                        fineness = $2,
                        pure_metal_weight = $3,
                        weight_oz = $4,
                        parsed_at = NOW()
                    WHERE id = $5
                `;
                
                await client.query(updateQuery, [
                    parsedData.coin_weight,
                    parsedData.fineness,
                    parsedData.pure_metal_weight,
                    parsedData.weight_oz,
                    row.id
                ]);
                
                console.log(`‚úÖ –ó–∞–ø–∏—Å—å ${row.id} –æ–±–Ω–æ–≤–ª–µ–Ω–∞!`);
            } else {
                console.log(`‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –æ –≤–µ—Å–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –∑–∞–ø–∏—Å–∏ ${row.id}`);
            }
            
            console.log('');
        }
        
        console.log('üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π:', error);
    } finally {
        client.release();
        await pool.end();
        await parser.close();
    }
}

updateExistingWeightRecords();
