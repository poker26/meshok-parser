// –ü—Ä–æ—Å—Ç–∞—è –∏ –Ω–∞–¥–µ–∂–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π —Å –≥—Ä–∞–¥–∞—Ü–∏—è–º–∏
function extractConditionWithGrade(conditionText) {
    if (!conditionText) return null;
    
    // –£–±–∏—Ä–∞–µ–º –í–°–ï –ø—Ä–æ–±–µ–ª—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    return conditionText.replace(/\s+/g, '');
}

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
const testConditions = [
    // –ü—Ä–æ—Å—Ç—ã–µ —Å–ª—É—á–∞–∏ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
    'MS 61',           // -> MS61
    'MS 64',           // -> MS64
    'XF 45',           // -> XF45
    'AU 58',           // -> AU58
    
    // –°–ª—É—á–∞–∏ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ (–¥–æ–ª–∂–Ω—ã –æ—Å—Ç–∞—Ç—å—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    'MS61',            // -> MS61
    'MS64',            // -> MS64
    'XF45',            // -> XF45
    
    // –°–ª–æ–∂–Ω—ã–µ —Å–ª—É—á–∞–∏ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
    'MS 64RB',         // -> MS64RB
    'XF 45BN',         // -> XF45BN
    'PF 62 CAMEO',     // -> PF62CAMEO
    'PF 70 ULTRA CAMEO', // -> PF70ULTRACAMEO
    
    // –°–ª—É—á–∞–∏ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
    'MS64RB',          // -> MS64RB
    'PF62CAMEO',       // -> PF62CAMEO
    
    // –¢–æ–ª—å–∫–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–µ–∑ –≥—Ä–∞–¥–∞—Ü–∏–π
    'MS',              // -> MS
    'AU',              // -> AU
    'UNC',             // -> UNC
    'PF',              // -> PF
    
    // –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    'AU/UNC',          // -> AU/UNC
    'VF/XF',           // -> VF/XF
    
    // –°–æ—Å—Ç–æ—è–Ω–∏—è —Å –ø–ª—é—Å–∞–º–∏ –∏ –º–∏–Ω—É—Å–∞–º–∏
    'XF+',             // -> XF+
    'VF-',             // -> VF-
    
    // –°–ª—É—á–∞–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–±–µ–ª–∞–º–∏
    'MS  64',          // -> MS64
    'PF  62  CAMEO',   // -> PF62CAMEO
    'XF   45   BN',    // -> XF45BN
    
    // –ì—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏
    '  MS 61  ',       // -> MS61 (–ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ)
    'MS   64   RB',    // -> MS64RB (–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã)
];

console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π —Å –≥—Ä–∞–¥–∞—Ü–∏—è–º–∏...');
console.log('üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:');
console.log('');

testConditions.forEach((testCondition, index) => {
    const result = extractConditionWithGrade(testCondition);
    const status = result === testCondition.replace(/\s+/g, '') ? '‚úÖ' : '‚ùå';
    console.log(`${index + 1}. ${status} "${testCondition}" -> "${result}"`);
});

console.log('');
console.log('üìä –í—ã–≤–æ–¥—ã:');
console.log('‚úÖ –ü—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥ —É–±–∏—Ä–∞–µ—Ç –í–°–ï –ø—Ä–æ–±–µ–ª—ã');
console.log('‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ —Å–ª–æ–∂–Ω—ã–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏');
console.log('‚úÖ –ù–µ —Ç—Ä–µ–±—É–µ—Ç —Å–ª–æ–∂–Ω—ã—Ö regex');
console.log('‚úÖ –ù–∞–¥–µ–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏');
console.log('‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤');
