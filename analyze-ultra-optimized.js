const { Client } = require('pg');

const dbConfig = {
    user: 'postgres.xkwgspqwebfeteoblayu',        
    host: 'aws-0-eu-north-1.pooler.supabase.com',
    database: 'postgres',   
    password: 'Gopapopa326+',    
    port: 6543,
    ssl: {
        rejectUnauthorized: false
    }
};

async function analyzeUltraOptimized() {
    const client = new Client(dbConfig);
    
    try {
        await client.connect();
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');
        
        console.log('\nüéØ –ê–ù–ê–õ–ò–ó –£–õ–¨–¢–†–ê-–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–û–ô –°–¢–†–ê–¢–ï–ì–ò–ò:');
        console.log('='.repeat(60));
        
        // 1. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        const totalQuery = `
            SELECT COUNT(*) as total
            FROM auction_lots 
            WHERE source_url IS NOT NULL;
        `;
        const totalResult = await client.query(totalQuery);
        console.log(`üìä –í—Å–µ–≥–æ –ª–æ—Ç–æ–≤ –≤ –±–∞–∑–µ: ${totalResult.rows[0].total}`);
        
        // 2. –ö—Ä–∏—Ç–∏—á–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (MS, PF, UNC, PL, PR, F, Proof, Gem, XX)
        const criticalQuery = `
            SELECT COUNT(*) as count
            FROM auction_lots 
            WHERE source_url IS NOT NULL 
            AND condition IN ('MS', 'PF', 'UNC', 'PL', 'PR', 'F', 'Proof', 'Gem', 'XX');
        `;
        const criticalResult = await client.query(criticalQuery);
        console.log(`üéØ –õ–æ—Ç–æ–≤ —Å –∫—Ä–∏—Ç–∏—á–Ω—ã–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ (–¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è): ${criticalResult.rows[0].count}`);
        
        // 3. –°–æ—Å—Ç–æ—è–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º (VF, XF, AU –∏ –∏—Ö –≤–∞—Ä–∏–∞—Ü–∏–∏)
        const skipQuery = `
            SELECT COUNT(*) as count
            FROM auction_lots 
            WHERE source_url IS NOT NULL 
            AND (condition LIKE 'VF%' OR condition LIKE 'XF%' OR condition LIKE 'AU%' 
                 OR condition IN ('VF', 'XF', 'AU', 'VF+', 'XF+', 'VF-', 'XF-', 'VF/XF', 'XF+/AU', 'AU/UNC'));
        `;
        const skipResult = await client.query(skipQuery);
        console.log(`‚è≠Ô∏è –õ–æ—Ç–æ–≤ —Å –ø—Ä–æ–ø—É—Å–∫–∞–µ–º—ã–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏: ${skipResult.rows[0].count}`);
        
        // 4. –£–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è (—Å –≥—Ä–∞–¥–∞—Ü–∏—è–º–∏)
        const correctQuery = `
            SELECT COUNT(*) as count
            FROM auction_lots 
            WHERE source_url IS NOT NULL 
            AND condition ~ '[0-9]';
        `;
        const correctResult = await client.query(correctQuery);
        console.log(`‚úÖ –£–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è (—Å –≥—Ä–∞–¥–∞—Ü–∏—è–º–∏): ${correctResult.rows[0].count}`);
        
        // 5. –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
        const criticalDetailsQuery = `
            SELECT condition, COUNT(*) as count
            FROM auction_lots 
            WHERE source_url IS NOT NULL 
            AND condition IN ('MS', 'PF', 'UNC', 'PL', 'PR', 'F', 'Proof', 'Gem', 'XX')
            GROUP BY condition
            ORDER BY count DESC;
        `;
        const criticalDetailsResult = await client.query(criticalDetailsQuery);
        
        console.log('\nüìã –î–ï–¢–ê–õ–ò–ó–ê–¶–ò–Ø –ö–†–ò–¢–ò–ß–ù–´–• –°–û–°–¢–û–Ø–ù–ò–ô:');
        criticalDetailsResult.rows.forEach((row, index) => {
            console.log(`${index + 1}. "${row.condition}": ${row.count} –ª–æ—Ç–æ–≤`);
        });
        
        // 6. –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—É—Å–∫–∞–µ–º—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
        const skipDetailsQuery = `
            SELECT condition, COUNT(*) as count
            FROM auction_lots 
            WHERE source_url IS NOT NULL 
            AND (condition LIKE 'VF%' OR condition LIKE 'XF%' OR condition LIKE 'AU%' 
                 OR condition IN ('VF', 'XF', 'AU', 'VF+', 'XF+', 'VF-', 'XF-', 'VF/XF', 'XF+/AU', 'AU/UNC'))
            GROUP BY condition
            ORDER BY count DESC
            LIMIT 15;
        `;
        const skipDetailsResult = await client.query(skipDetailsQuery);
        
        console.log('\n‚è≠Ô∏è –î–ï–¢–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–û–ü–£–°–ö–ê–ï–ú–´–• –°–û–°–¢–û–Ø–ù–ò–ô (—Ç–æ–ø-15):');
        skipDetailsResult.rows.forEach((row, index) => {
            console.log(`${index + 1}. "${row.condition}": ${row.count} –ª–æ—Ç–æ–≤`);
        });
        
        // 7. –†–∞—Å—á–µ—Ç —ç–∫–æ–Ω–æ–º–∏–∏
        const total = totalResult.rows[0].total;
        const critical = criticalResult.rows[0].count;
        const skip = skipResult.rows[0].count;
        const correct = correctResult.rows[0].count;
        
        const savingsPercent = ((total - critical) / total * 100).toFixed(1);
        
        console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –£–õ–¨–¢–†–ê-–û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò:');
        console.log('='.repeat(50));
        console.log(`üìä –í—Å–µ–≥–æ –ª–æ—Ç–æ–≤: ${total}`);
        console.log(`üéØ –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${critical} (${(critical/total*100).toFixed(1)}%)`);
        console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º (VF/XF/AU): ${skip} (${(skip/total*100).toFixed(1)}%)`);
        console.log(`‚úÖ –£–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ: ${correct} (${(correct/total*100).toFixed(1)}%)`);
        console.log(`üöÄ –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏: ${savingsPercent}%`);
        
        // 8. –ü—Ä–∏–º–µ—Ä—ã –ª–æ—Ç–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        const examplesQuery = `
            SELECT id, lot_number, auction_number, condition, source_url
            FROM auction_lots 
            WHERE source_url IS NOT NULL 
            AND condition IN ('MS', 'PF', 'UNC', 'PL', 'PR', 'F', 'Proof', 'Gem', 'XX')
            ORDER BY auction_number DESC, lot_number
            LIMIT 20;
        `;
        const examplesResult = await client.query(examplesQuery);
        
        console.log('\nüìã –ü–†–ò–ú–ï–†–´ –õ–û–¢–û–í –î–õ–Ø –û–ë–ù–û–í–õ–ï–ù–ò–Ø (–ø–µ—Ä–≤—ã–µ 20):');
        examplesResult.rows.forEach((row, index) => {
            console.log(`${index + 1}. –ê—É–∫—Ü–∏–æ–Ω ${row.auction_number}, –õ–æ—Ç ${row.lot_number}: "${row.condition}"`);
        });
        
        // 9. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        const analysisResults = {
            total: total,
            critical: critical,
            skip: skip,
            correct: correct,
            savingsPercent: savingsPercent,
            criticalDetails: criticalDetailsResult.rows,
            skipDetails: skipDetailsResult.rows,
            examples: examplesResult.rows
        };
        
        const fs = require('fs');
        fs.writeFileSync('ultra_optimized_analysis.json', JSON.stringify(analysisResults, null, 2));
        console.log('\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–ª—å—Ç—Ä–∞-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: ultra_optimized_analysis.json');
        
        // 10. –°–æ–∑–¥–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SQL
        const optimizedSQL = `
            -- –£–ª—å—Ç—Ä–∞-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ—Ç–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            -- –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è: MS, PF, UNC, PL, PR, F, Proof, Gem, XX
            -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º VF, XF, AU - –¥–ª—è –Ω–∏—Ö –≥—Ä–∞–¥–∞—Ü–∏–∏ –º–µ–Ω–µ–µ –≤–∞–∂–Ω—ã
            SELECT id, lot_number, auction_number, condition, source_url
            FROM auction_lots 
            WHERE source_url IS NOT NULL 
            AND condition IN ('MS', 'PF', 'UNC', 'PL', 'PR', 'F', 'Proof', 'Gem', 'XX')
            ORDER BY auction_number DESC, lot_number;
        `;
        
        fs.writeFileSync('ultra_optimized_query.sql', optimizedSQL);
        console.log('üíæ –£–ª—å—Ç—Ä–∞-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SQL –∑–∞–ø—Ä–æ—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: ultra_optimized_query.sql');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await client.end();
    }
}

analyzeUltraOptimized();
