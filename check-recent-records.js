const { Pool } = require('pg');
const config = require('./config');

const pool = new Pool(config.dbConfig);

async function checkRecentRecords() {
    const client = await pool.connect();
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ...\n');

        // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        const totalResult = await client.query('SELECT COUNT(*) FROM coin_catalog');
        console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: ${totalResult.rows[0].count}`);

        // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π
        const recentResult = await client.query(`
            SELECT id, coin_name, metal, coin_weight, fineness, pure_metal_weight, weight_oz, original_description
            FROM coin_catalog 
            ORDER BY id DESC
            LIMIT 5
        `);
        
        console.log('\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π:');
        recentResult.rows.forEach((row, index) => {
            console.log(`\n${index + 1}. ID: ${row.id}`);
            console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${row.coin_name}`);
            console.log(`   –ú–µ—Ç–∞–ª–ª: ${row.metal || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
            console.log(`   –í–µ—Å –º–æ–Ω–µ—Ç—ã: ${row.coin_weight || '–Ω–µ —É–∫–∞–∑–∞–Ω'}–≥`);
            console.log(`   –ü—Ä–æ–±–∞: ${row.fineness || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
            console.log(`   –ß–∏—Å—Ç—ã–π –º–µ—Ç–∞–ª–ª: ${row.pure_metal_weight || '–Ω–µ —É–∫–∞–∑–∞–Ω'}–≥`);
            console.log(`   –í–µ—Å –≤ —É–Ω—Ü–∏—è—Ö: ${row.weight_oz || '–Ω–µ —É–∫–∞–∑–∞–Ω'}oz`);
            console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${row.original_description.substring(0, 100)}...`);
        });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ –≤–µ—Å–∞
        const weightResult = await client.query(`
            SELECT COUNT(*) 
            FROM coin_catalog 
            WHERE coin_weight IS NOT NULL OR fineness IS NOT NULL OR pure_metal_weight IS NOT NULL
        `);
        console.log(`\nüìä –ó–∞–ø–∏—Å–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –≤–µ—Å–µ: ${weightResult.rows[0].count}`);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–ø–∏—Å–µ–π:', error);
    } finally {
        client.release();
        await pool.end();
    }
}

checkRecentRecords();


