#!/bin/bash

# –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã

echo "üß™ –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
echo "================================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –°—á–µ—Ç—á–∏–∫–∏
TESTS_PASSED=0
TESTS_FAILED=0
TOTAL_TESTS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
run_test() {
    local test_name="$1"
    local test_command="$2"
    local expected_result="${3:-0}"
    
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    
    echo -e "${BLUE}üîç –¢–µ—Å—Ç $TOTAL_TESTS: $test_name${NC}"
    
    if eval "$test_command" > /dev/null 2>&1; then
        if [ $? -eq $expected_result ]; then
            echo -e "   ${GREEN}‚úÖ –ü–†–û–ô–î–ï–ù${NC}"
            TESTS_PASSED=$((TESTS_PASSED + 1))
        else
            echo -e "   ${RED}‚ùå –ü–†–û–í–ê–õ–ï–ù (–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –∫–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞)${NC}"
            TESTS_FAILED=$((TESTS_FAILED + 1))
        fi
    else
        echo -e "   ${RED}‚ùå –ü–†–û–í–ê–õ–ï–ù${NC}"
        TESTS_FAILED=$((TESTS_FAILED + 1))
    fi
    echo ""
}

echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤..."

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å–∏—Å—Ç–µ–º—ã
run_test "–§–∞–π–ª analyze-crash-recovery.js" "[ -f 'analyze-crash-recovery.js' ]"
run_test "–§–∞–π–ª auto-restart.sh" "[ -f 'auto-restart.sh' ]"
run_test "–§–∞–π–ª update-server.sh" "[ -f 'update-server.sh' ]"
run_test "–§–∞–π–ª external-monitor.html" "[ -f 'external-monitor.html' ]"
run_test "–§–∞–π–ª server.js" "[ -f 'server.js' ]"

echo "üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∫—Ä–∏–ø—Ç–∞–º..."

# –¢–µ—Å—Ç 2: –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
run_test "–ü—Ä–∞–≤–∞ –Ω–∞ analyze-crash-recovery.js" "[ -r 'analyze-crash-recovery.js' ]"
run_test "–ü—Ä–∞–≤–∞ –Ω–∞ auto-restart.sh" "[ -r 'auto-restart.sh' ]"
run_test "–ü—Ä–∞–≤–∞ –Ω–∞ update-server.sh" "[ -r 'update-server.sh' ]"

echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Å–∫—Ä–∏–ø—Ç–æ–≤..."

# –¢–µ—Å—Ç 3: –°–∏–Ω—Ç–∞–∫—Å–∏—Å JavaScript
run_test "–°–∏–Ω—Ç–∞–∫—Å–∏—Å analyze-crash-recovery.js" "node -c analyze-crash-recovery.js"
run_test "–°–∏–Ω—Ç–∞–∫—Å–∏—Å server.js" "node -c server.js"

# –¢–µ—Å—Ç 4: –°–∏–Ω—Ç–∞–∫—Å–∏—Å Bash —Å–∫—Ä–∏–ø—Ç–æ–≤
run_test "–°–∏–Ω—Ç–∞–∫—Å–∏—Å auto-restart.sh" "bash -n auto-restart.sh"
run_test "–°–∏–Ω—Ç–∞–∫—Å–∏—Å update-server.sh" "bash -n update-server.sh"

echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å..."

# –¢–µ—Å—Ç 5: –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (–µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω)
if curl -s http://localhost:3001/api/health > /dev/null 2>&1; then
    run_test "Health Check API" "curl -s http://localhost:3001/api/health | grep -q 'status'"
    run_test "Logs API" "curl -s http://localhost:3001/api/logs | grep -q 'logs'"
    run_test "Monitor Page" "curl -s http://localhost:3001/monitor | grep -q 'monitor'"
else
    echo -e "${YELLOW}‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞${NC}"
    echo ""
fi

echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ö–∞–Ω–∏–∑–º –∞–Ω–∞–ª–∏–∑–∞ —Å–±–æ—è..."

# –¢–µ—Å—Ç 6: –ê–Ω–∞–ª–∏–∑ —Å–±–æ—è (—Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã)
echo "üìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞..."

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤
TEST_DIR="/tmp/wolmar-test-$$"
mkdir -p "$TEST_DIR"
cd "$TEST_DIR"

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
cat > parser_progress_2133.json << EOF
{
    "auctionNumber": "2133",
    "currentLot": 150,
    "progress": 75.5
}
EOF

cat > mass_update_progress_968.json << EOF
{
    "auctionNumber": "968",
    "updateProgress": {
        "currentLot": 200,
        "progress": 80.0
    }
}
EOF

cat > predictions_progress_2133.json << EOF
{
    "auctionNumber": "2133",
    "predictionsProgress": {
        "currentIndex": 100,
        "progress": 50.0
    }
}
EOF

# –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –∞–Ω–∞–ª–∏–∑–∞ –≤ —Ç–µ—Å—Ç–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cp /var/www/wolmar-parser/analyze-crash-recovery.js . 2>/dev/null || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å analyze-crash-recovery.js"

# –¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å–±–æ—è
run_test "–ê–Ω–∞–ª–∏–∑ —Å–±–æ—è (—Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞)" "node analyze-crash-recovery.js 2>/dev/null"
run_test "–û—Ç—á–µ—Ç –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–∑–¥–∞–Ω" "[ -f 'crash-recovery-report.json' ]"

# –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd /tmp
rm -rf "$TEST_DIR"

echo "üìà –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:"
echo "======================="
echo -e "${GREEN}‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: $TESTS_PASSED${NC}"
echo -e "${RED}‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: $TESTS_FAILED${NC}"
echo -e "${BLUE}üìä –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS${NC}"

if [ $TESTS_FAILED -eq 0 ]; then
    echo -e "${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo -e "${GREEN}‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
    exit 0
else
    echo -e "${RED}‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã${NC}"
    echo -e "${YELLOW}üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö${NC}"
    exit 1
fi
