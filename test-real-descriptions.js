const CatalogParser = require('./catalog-parser.js');

async function testRealDescriptions() {
    const parser = new CatalogParser();
    
    try {
        await parser.init();
        
        // –†–µ–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑ –ª–æ–≥–æ–≤
        const testDescriptions = [
            "50 —Ä—É–±–ª–µ–π. –ú–æ—Å–∫–æ–≤—Å–∫–∏–π –ö—Ä–µ–º–ª—å –∏ –ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å. –¢–æ–ø –≥—Ä–µ–π–¥ 2006–≥. –ú–ú–î. Au 7,78. | –í —Å–ª–∞–±–µ NGC. –¢–æ–ø –≥—Ä–µ–π–¥.",
            "100 –¥–æ–ª–ª–∞—Ä–æ–≤. –ú–µ–∫—Å–∏–∫–∞ 1985–≥. Ag 31,1. | –ú–∏–∫—Ä–æ—Ü–∞—Ä–∞–ø–∏–Ω—ã.",
            "50 —Ä—É–±–ª–µ–π. –ü–µ—Ç—Ä I 2003–≥. –ú–ú–î. Au 7,78. | –ù–∞ —Ñ–æ–Ω–µ –æ–∫–Ω–∞-–∞—Ä–∫–∏ –≤ –∫–∏—Ä–ø–∏—á–Ω–æ–π —Å—Ç–µ–Ω–µ - –ø–æ—Ä—Ç—Ä–µ—Ç –∏–º–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ü–µ—Ç—Ä–∞ I."
        ];
        
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π...\n');
        
        for (const [index, description] of testDescriptions.entries()) {
            console.log(`--- –¢–µ—Å—Ç ${index + 1} ---`);
            console.log(`üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${description.substring(0, 80)}...`);
            
            // –ü–∞—Ä—Å–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ
            const parsedData = parser.parseLotDescription(description);
            
            console.log(`\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞:`);
            console.log(`  - –ú–µ—Ç–∞–ª–ª: ${parsedData.metal || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
            console.log(`  - –í–µ—Å –º–æ–Ω–µ—Ç—ã: ${parsedData.coin_weight || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}–≥`);
            console.log(`  - –ü—Ä–æ–±–∞: ${parsedData.fineness || '–Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}`);
            console.log(`  - –ß–∏—Å—Ç—ã–π –º–µ—Ç–∞–ª–ª: ${parsedData.pure_metal_weight || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}–≥`);
            console.log(`  - –í–µ—Å –≤ —É–Ω—Ü–∏—è—Ö: ${parsedData.weight_oz || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}oz`);
            
            console.log('\n');
        }
        
        console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    } finally {
        await parser.close();
    }
}

testRealDescriptions();




