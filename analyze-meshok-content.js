const puppeteer = require('puppeteer');

async function analyzeMeshokContent() {
    try {
        console.log('üîç –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Chrome —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º...');
        
        const browser = await puppeteer.connect({
            browserURL: 'http://localhost:9222'
        });

        const page = await browser.newPage();
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ Meshok
        console.log('ü™ô –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ Meshok...');
        await page.goto('https://meshok.net/good/252');
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
        await new Promise(resolve => setTimeout(resolve, 5000));
        
        const content = await page.content();
        console.log('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω, –¥–ª–∏–Ω–∞:', content.length);
        
        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        console.log('\nüìä –ê–ù–ê–õ–ò–ó –ö–û–ù–¢–ï–ù–¢–ê:');
        console.log('–ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤:', content.substring(0, 200));
        console.log('\nüîç –ü–æ–∏—Å–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤:');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
        const indicators = {
            'Just a moment': content.includes('Just a moment'),
            'Cloudflare': content.includes('Cloudflare'),
            'challenge': content.includes('challenge'),
            'bot': content.includes('bot'),
            'captcha': content.includes('captcha'),
            'meshok': content.toLowerCase().includes('meshok'),
            '–º–æ–Ω–µ—Ç—ã': content.toLowerCase().includes('–º–æ–Ω–µ—Ç—ã'),
            'coins': content.toLowerCase().includes('coins'),
            '—Ç–æ–≤–∞—Ä': content.toLowerCase().includes('—Ç–æ–≤–∞—Ä'),
            'item': content.toLowerCase().includes('item')
        };
        
        Object.entries(indicators).forEach(([key, value]) => {
            console.log(`${key}: ${value ? '‚úÖ' : '‚ùå'}`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const title = await page.title();
        console.log('\nüìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', title);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
        const url = page.url();
        console.log('üåê –¢–µ–∫—É—â–∏–π URL:', url);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        const elements = await page.evaluate(() => {
            return {
                bodyText: document.body ? document.body.textContent.substring(0, 500) : 'No body',
                hasItems: document.querySelectorAll('.item').length,
                hasProducts: document.querySelectorAll('.product').length,
                hasGoods: document.querySelectorAll('.good').length,
                hasLots: document.querySelectorAll('.lot').length
            };
        });
        
        console.log('\nüîç –≠–õ–ï–ú–ï–ù–¢–´ –°–¢–†–ê–ù–ò–¶–´:');
        console.log('–¢–µ–∫—Å—Ç body (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):', elements.bodyText);
        console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ .item —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', elements.hasItems);
        console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ .product —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', elements.hasProducts);
        console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ .good —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', elements.hasGoods);
        console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ .lot —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', elements.hasLots);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    }
}

analyzeMeshokContent();
