#!/bin/bash

# Wolmar Parser - Pre-deployment Safety Check
# –ê–≤—Ç–æ—Ä: Wolmar Team
# –í–µ—Ä—Å–∏—è: 2.0.0

set -e

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º Wolmar Parser..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
print_status() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2${NC}"
    fi
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: Node.js –≤–µ—Ä—Å–∏—è
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js..."
NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -ge 18 ]; then
    print_status 0 "Node.js –≤–µ—Ä—Å–∏—è: $(node -v) (OK)"
else
    print_status 1 "Node.js –≤–µ—Ä—Å–∏—è: $(node -v) (—Ç—Ä–µ–±—É–µ—Ç—Å—è 18+)"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: PM2
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2..."
if command -v pm2 &> /dev/null; then
    print_status 0 "PM2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(pm2 -v)"
else
    print_status 1 "PM2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ü–æ—Ä—Ç—ã
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
PORT_3000=$(netstat -tlnp 2>/dev/null | grep :3000 | wc -l)
PORT_3001=$(netstat -tlnp 2>/dev/null | grep :3001 | wc -l)

if [ $PORT_3000 -eq 0 ]; then
    print_status 0 "–ü–æ—Ä—Ç 3000 —Å–≤–æ–±–æ–¥–µ–Ω"
else
    print_warning "–ü–æ—Ä—Ç 3000 –∑–∞–Ω—è—Ç:"
    netstat -tlnp | grep :3000
fi

if [ $PORT_3001 -eq 0 ]; then
    print_status 0 "–ü–æ—Ä—Ç 3001 —Å–≤–æ–±–æ–¥–µ–Ω"
else
    print_warning "–ü–æ—Ä—Ç 3001 –∑–∞–Ω—è—Ç:"
    netstat -tlnp | grep :3001
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
PM2_PROCESSES=$(pm2 list 2>/dev/null | grep -E "(wolmar|main|catalog)" | wc -l)
if [ $PM2_PROCESSES -eq 0 ]; then
    print_status 0 "–ö–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
else
    print_warning "–ù–∞–π–¥–µ–Ω—ã PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã:"
    pm2 list | grep -E "(wolmar|main|catalog)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
if [ -f config.js ]; then
    node -e "
    const { Pool } = require('pg');
    const config = require('./config');
    const pool = new Pool(config.dbConfig);
    pool.query('SELECT 1').then(() => {
      console.log('‚úÖ –ë–î –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ OK');
      process.exit(0);
    }).catch(err => {
      console.error('‚ùå –ë–î –æ—à–∏–±–∫–∞:', err.message);
      process.exit(1);
    });
    " && print_status 0 "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞" || print_status 1 "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î"
else
    print_status 1 "–§–∞–π–ª config.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 6: –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [ -f package.json ]; then
    print_status 0 "package.json –Ω–∞–π–¥–µ–Ω"
    if [ -d node_modules ]; then
        print_status 0 "node_modules —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        print_warning "node_modules –Ω–µ –Ω–∞–π–¥–µ–Ω - –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è npm install"
    fi
else
    print_status 1 "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 7: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p logs catalog-images catalog-public backup
print_status 0 "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã/–ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 8: –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
if [ -w . ]; then
    print_status 0 "–ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
else
    print_status 1 "–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 9: –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞..."
DISK_USAGE=$(df -h . | tail -1 | awk '{print $5}' | sed 's/%//')
if [ $DISK_USAGE -lt 80 ]; then
    print_status 0 "–°–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ: $((100-DISK_USAGE))%"
else
    print_warning "–ú–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞: $((100-DISK_USAGE))%"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 10: –ü–∞–º—è—Ç—å
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏..."
TOTAL_MEM=$(free -m | grep 'Mem:' | awk '{print $2}')
if [ $TOTAL_MEM -ge 2048 ]; then
    print_status 0 "–ü–∞–º—è—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞: ${TOTAL_MEM}MB"
else
    print_warning "–ú–∞–ª–æ –ø–∞–º—è—Ç–∏: ${TOTAL_MEM}MB (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 2GB+)"
fi

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo ""
echo "üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:"
echo "=================="

# –ü–æ–¥—Å—á–µ—Ç –ø—Ä–æ–±–ª–µ–º
ISSUES=0
if [ $PORT_3000 -gt 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ü–æ—Ä—Ç 3000 –∑–∞–Ω—è—Ç${NC}"
    ISSUES=$((ISSUES + 1))
fi

if [ $PORT_3001 -gt 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ü–æ—Ä—Ç 3001 –∑–∞–Ω—è—Ç${NC}"
    ISSUES=$((ISSUES + 1))
fi

if [ $PM2_PROCESSES -gt 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã${NC}"
    ISSUES=$((ISSUES + 1))
fi

if [ $DISK_USAGE -ge 80 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ú–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞${NC}"
    ISSUES=$((ISSUES + 1))
fi

if [ $TOTAL_MEM -lt 2048 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ú–∞–ª–æ –ø–∞–º—è—Ç–∏${NC}"
    ISSUES=$((ISSUES + 1))
fi

echo ""
if [ $ISSUES -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ!${NC}"
    echo -e "${GREEN}   –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ${NC}"
    echo ""
    echo "üöÄ –î–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   ./git-deploy.sh"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´: $ISSUES${NC}"
    echo -e "${YELLOW}   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–µ—à–∏—Ç—å –∏—Ö –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º${NC}"
    echo ""
    echo "üõ†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    if [ $PORT_3000 -gt 0 ] || [ $PORT_3001 -gt 0 ]; then
        echo "   - –û—Å–≤–æ–±–æ–¥–∏—Ç–µ –ø–æ—Ä—Ç—ã 3000/3001 –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
    fi
    if [ $PM2_PROCESSES -gt 0 ]; then
        echo "   - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã"
    fi
    if [ $DISK_USAGE -ge 80 ]; then
        echo "   - –û—Å–≤–æ–±–æ–¥–∏—Ç–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ"
    fi
    if [ $TOTAL_MEM -lt 2048 ]; then
        echo "   - –£–≤–µ–ª–∏—á—å—Ç–µ –ø–∞–º—è—Ç—å –∏–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Å–∏—Å—Ç–µ–º—É"
    fi
fi

echo ""
echo "üìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   pm2 status          - —Å—Ç–∞—Ç—É—Å PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
echo "   netstat -tlnp       - —Å–ø–∏—Å–æ–∫ –ø–æ—Ä—Ç–æ–≤"
echo "   df -h               - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞"
echo "   free -h             - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏"
