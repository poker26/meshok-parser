const { Pool } = require('pg');
const config = require('./config');

async function createCollectionUsersTable() {
    const pool = new Pool(config.dbConfig);
    
    try {
        console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã collection_users...\n');
        
        // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É collection_users
        await pool.query(`
            CREATE TABLE IF NOT EXISTS collection_users (
                id SERIAL PRIMARY KEY,
                username VARCHAR(50) UNIQUE NOT NULL,
                password_hash VARCHAR(255) NOT NULL,
                email VARCHAR(100),
                full_name VARCHAR(100),
                created_at TIMESTAMP DEFAULT NOW(),
                last_login TIMESTAMP,
                is_active BOOLEAN DEFAULT true
            )
        `);
        console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ collection_users');
        
        // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
        await pool.query(`
            CREATE INDEX IF NOT EXISTS idx_collection_users_username ON collection_users(username);
            CREATE INDEX IF NOT EXISTS idx_collection_users_email ON collection_users(email);
        `);
        console.log('‚úÖ –°–æ–∑–¥–∞–Ω—ã –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è collection_users');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É user_collections —á—Ç–æ–±—ã —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ collection_users
        await pool.query(`
            ALTER TABLE user_collections 
            DROP CONSTRAINT IF EXISTS user_collections_user_id_fkey
        `);
        console.log('‚úÖ –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —Å–≤—è–∑—å user_collections -> users');
        
        await pool.query(`
            ALTER TABLE user_collections 
            ADD CONSTRAINT user_collections_user_id_fkey 
            FOREIGN KEY (user_id) REFERENCES collection_users(id) ON DELETE CASCADE
        `);
        console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å user_collections -> collection_users');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É user_sessions
        await pool.query(`
            ALTER TABLE user_sessions 
            DROP CONSTRAINT IF EXISTS user_sessions_user_id_fkey
        `);
        console.log('‚úÖ –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —Å–≤—è–∑—å user_sessions -> users');
        
        await pool.query(`
            ALTER TABLE user_sessions 
            ADD CONSTRAINT user_sessions_user_id_fkey 
            FOREIGN KEY (user_id) REFERENCES collection_users(id) ON DELETE CASCADE
        `);
        console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å user_sessions -> collection_users');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
        const result = await pool.query(`
            SELECT column_name, data_type, is_nullable, column_default
            FROM information_schema.columns 
            WHERE table_name = 'collection_users'
            ORDER BY ordinal_position
        `);
        
        console.log('\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã collection_users:');
        result.rows.forEach(row => {
            console.log(`  - ${row.column_name}: ${row.data_type} ${row.is_nullable === 'NO' ? 'NOT NULL' : 'NULL'}`);
        });
        
        console.log('\nüéâ –¢–∞–±–ª–∏—Ü–∞ collection_users —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã:', error.message);
        throw error;
    } finally {
        await pool.end();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
createCollectionUsersTable()
    .then(() => {
        console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
        process.exit(0);
    })
    .catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        process.exit(1);
    });
