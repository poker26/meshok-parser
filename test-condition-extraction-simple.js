// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏–∑ wolmar-parser5.js

// –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å –≥—Ä–∞–¥–∞—Ü–∏–µ–π (–∏–∑ wolmar-parser5.js)
function extractConditionWithGrade(conditionText) {
    if (!conditionText) return null;
    return conditionText.replace(/\s+/g, '');
}

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testConditions = [
    "MS 61",
    "PF 70 ULTRA CAMEO", 
    "AU 55",
    "XF 45",
    "VF 30",
    "MS 64RB",
    "PF 63RB",
    "AU 58",
    "UNC",
    "MS",
    "PF",
    "AU",
    "XF",
    "VF",
    "PL",
    "PR",
    "F",
    "Proof",
    "Gem",
    "XX",
    "MS 62 BN",
    "PF 65 CAMEO",
    "AU 53",
    "XF 40",
    "VF 20",
    "MS 67",
    "PF 69 ULTRA CAMEO",
    "AU 50",
    "XF 35",
    "VF 25"
];

console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–£–ù–ö–¶–ò–ò –ò–ó–í–õ–ï–ß–ï–ù–ò–Ø –°–û–°–¢–û–Ø–ù–ò–ô:');
console.log('='.repeat(60));

testConditions.forEach((condition, index) => {
    const processed = extractConditionWithGrade(condition);
    console.log(`${index + 1}. "${condition}" -> "${processed}"`);
});

console.log('\n‚úÖ –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω!');
