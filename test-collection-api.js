const axios = require('axios');

const BASE_URL = 'http://localhost:3000';

async function testCollectionAPI() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫–æ–ª–ª–µ–∫—Ü–∏–π...\n');

    try {
        // 1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('1Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        const registerResponse = await axios.post(`${BASE_URL}/api/auth/register`, {
            username: 'testuser',
            password: 'password123',
            email: 'test@example.com',
            fullName: 'Test User'
        });
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', registerResponse.data);

        // 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        console.log('\n2Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...');
        const loginResponse = await axios.post(`${BASE_URL}/api/auth/login`, {
            username: 'testuser',
            password: 'password123'
        });
        const token = loginResponse.data.token;
        console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω');

        // 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        console.log('\n3Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è...');
        const profileResponse = await axios.get(`${BASE_URL}/api/auth/profile`, {
            headers: { 'Authorization': `Bearer ${token}` }
        });
        console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω:', profileResponse.data.user.username);

        // 4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–æ–Ω–µ—Ç
        console.log('\n4Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞...');
        const statsResponse = await axios.get(`${BASE_URL}/api/catalog/stats`);
        console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞:', statsResponse.data);

        // 5. –ü–æ–∏—Å–∫ –º–æ–Ω–µ—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é
        console.log('\n5Ô∏è‚É£ –ü–æ–∏—Å–∫ –º–æ–Ω–µ—Ç...');
        const coinsResponse = await axios.get(`${BASE_URL}/api/catalog/coins?limit=5`);
        const coins = coinsResponse.data.coins;
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${coins.length} –º–æ–Ω–µ—Ç`);

        if (coins.length > 0) {
            const firstCoin = coins[0];
            console.log(`üìÑ –ü–µ—Ä–≤–∞—è –º–æ–Ω–µ—Ç–∞: ${firstCoin.coin_name} (ID: ${firstCoin.id})`);

            // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –º–æ–Ω–µ—Ç–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
            console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏...');
            const checkResponse = await axios.get(`${BASE_URL}/api/collection/check/${firstCoin.id}`, {
                headers: { 'Authorization': `Bearer ${token}` }
            });
            console.log('‚úÖ –ú–æ–Ω–µ—Ç–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:', checkResponse.data.isInCollection);

            // 7. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–Ω–µ—Ç—ã –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é
            console.log('\n7Ô∏è‚É£ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–Ω–µ—Ç—ã –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é...');
            const addResponse = await axios.post(`${BASE_URL}/api/collection/add`, {
                coinId: firstCoin.id,
                notes: '–¢–µ—Å—Ç–æ–≤–∞—è –º–æ–Ω–µ—Ç–∞',
                conditionRating: 4,
                purchasePrice: 100.50,
                purchaseDate: '2025-01-01'
            }, {
                headers: { 'Authorization': `Bearer ${token}` }
            });
            console.log('‚úÖ –ú–æ–Ω–µ—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é:', addResponse.data);

            // 8. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            console.log('\n8Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏...');
            const collectionResponse = await axios.get(`${BASE_URL}/api/collection`, {
                headers: { 'Authorization': `Bearer ${token}` }
            });
            console.log(`‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç ${collectionResponse.data.coins.length} –º–æ–Ω–µ—Ç`);
            console.log('üìä –ü–∞–≥–∏–Ω–∞—Ü–∏—è:', collectionResponse.data.pagination);

            // 9. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
            console.log('\n9Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏...');
            const collectionStatsResponse = await axios.get(`${BASE_URL}/api/collection/stats`, {
                headers: { 'Authorization': `Bearer ${token}` }
            });
            console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:', collectionStatsResponse.data);

            // 10. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–Ω–µ—Ç–µ
            console.log('\nüîü –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–Ω–µ—Ç–µ...');
            const updateResponse = await axios.put(`${BASE_URL}/api/collection/update`, {
                coinId: firstCoin.id,
                notes: '–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏',
                conditionRating: 5
            }, {
                headers: { 'Authorization': `Bearer ${token}` }
            });
            console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–Ω–µ—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', updateResponse.data);

            // 11. –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–Ω–µ—Ç—ã –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
            console.log('\n1Ô∏è‚É£1Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–Ω–µ—Ç—ã –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏...');
            const removeResponse = await axios.delete(`${BASE_URL}/api/collection/remove`, {
                data: { coinId: firstCoin.id },
                headers: { 'Authorization': `Bearer ${token}` }
            });
            console.log('‚úÖ –ú–æ–Ω–µ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:', removeResponse.data);

        } else {
            console.log('‚ö†Ô∏è –ù–µ—Ç –º–æ–Ω–µ—Ç –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
        }

        console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã API –∫–æ–ª–ª–µ–∫—Ü–∏–π –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.response?.data || error.message);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testCollectionAPI();
