const fetch = require('node-fetch');

async function testCollectionAPI() {
    try {
        console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∫–æ–ª–ª–µ–∫—Ü–∏–∏...');
        
        // –¢–µ—Å—Ç –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const response = await fetch('http://localhost:3000/api/collection/stats');
        console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏):', response.status);
        
        if (response.ok) {
            const data = await response.json();
            console.log('üìä –î–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', JSON.stringify(data, null, 2));
        }
        
        // –¢–µ—Å—Ç —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π (–Ω—É–∂–µ–Ω —Ç–æ–∫–µ–Ω)
        console.log('\nüîê –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –Ω—É–∂–µ–Ω —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        console.log('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
        console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Developer Tools (F12)');
        console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Network');
        console.log('3. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É');
        console.log('4. –ù–∞–π–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ /api/collection/stats');
        console.log('5. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ Response - –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API:', error);
    }
}

testCollectionAPI();
