const { Pool } = require('pg');
const config = require('./config');

const pool = new Pool(config.dbConfig);

async function checkDescriptions() {
    const client = await pool.connect();
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–∏—Å–∞–Ω–∏–π –ª–æ—Ç–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ—Å–µ...\n');

        // –ò—â–µ–º –æ–ø–∏—Å–∞–Ω–∏—è —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –≤–µ—Å–∞ –∏–ª–∏ –ø—Ä–æ–±—ã
        const result = await client.query(`
            SELECT id, coin_name, original_description 
            FROM coin_catalog 
            WHERE original_description ILIKE '%–≤–µ—Å%' 
               OR original_description ILIKE '%–≥—Ä%'
               OR original_description ILIKE '%Au %'
               OR original_description ILIKE '%Ag %'
               OR original_description ILIKE '%–ø—Ä–æ–±–∞%'
            LIMIT 10
        `);
        
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–π —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –≤–µ—Å–∞: ${result.rows.length}\n`);
        
        result.rows.forEach((row, index) => {
            console.log(`${index + 1}. ID: ${row.id}`);
            console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${row.coin_name}`);
            console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${row.original_description}`);
            console.log('');
        });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        const countResult = await client.query('SELECT COUNT(*) FROM coin_catalog');
        console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: ${countResult.rows[0].count}`);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–ø–∏—Å–∞–Ω–∏–π:', error);
    } finally {
        client.release();
        await pool.end();
    }
}

checkDescriptions();


