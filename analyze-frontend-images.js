const http = require('http');

async function analyzeFrontendImages() {
    console.log('üîç –ê–Ω–∞–ª–∏–∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:\n');
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–∞–ª–æ–≥–∞
        const response = await fetch('http://46.173.19.68:3000');
        const html = await response.text();
        
        console.log('üìÑ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—É—á–µ–Ω');
        console.log(`üìä –†–∞–∑–º–µ—Ä HTML: ${html.length} —Å–∏–º–≤–æ–ª–æ–≤`);
        
        // –ò—â–µ–º –≤—Å–µ img —Ç–µ–≥–∏
        const imgRegex = /<img[^>]+src="([^"]+)"[^>]*>/g;
        const images = [];
        let match;
        
        while ((match = imgRegex.exec(html)) !== null) {
            images.push(match[1]);
        }
        
        console.log(`\nüñºÔ∏è –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${images.length}`);
        
        images.forEach((src, index) => {
            console.log(`${index + 1}. ${src}`);
        });
        
        // –ò—â–µ–º API –≤—ã–∑–æ–≤—ã –≤ JavaScript
        const apiRegex = /\/api\/catalog\/coins\/(\d+)\/image\/(avers|revers)/g;
        const apiCalls = [];
        
        while ((match = apiRegex.exec(html)) !== null) {
            apiCalls.push({
                id: match[1],
                type: match[2],
                url: match[0]
            });
        }
        
        console.log(`\nüîó –ù–∞–π–¥–µ–Ω–æ API –≤—ã–∑–æ–≤–æ–≤: ${apiCalls.length}`);
        
        apiCalls.forEach((call, index) => {
            console.log(`${index + 1}. ID: ${call.id}, –¢–∏–ø: ${call.type}, URL: ${call.url}`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å ID
        const uniqueIds = [...new Set(apiCalls.map(call => call.id))];
        console.log(`\nüìä –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID: ${uniqueIds.length}`);
        console.log(`ID: ${uniqueIds.join(', ')}`);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    }
}

analyzeFrontendImages();




