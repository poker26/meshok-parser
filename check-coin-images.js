const { Pool } = require('pg');
const config = require('./config');

async function checkCoinImages() {
    const pool = new Pool(config.dbConfig);
    
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –º–æ–Ω–µ—Ç –≤ –ë–î...\n');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        const totalResult = await pool.query('SELECT COUNT(*) FROM coin_catalog');
        console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: ${totalResult.rows[0].count}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        const imagesResult = await pool.query(`
            SELECT COUNT(*) 
            FROM coin_catalog 
            WHERE avers_image IS NOT NULL OR revers_image IS NOT NULL
        `);
        console.log(`üñºÔ∏è –ó–∞–ø–∏—Å–µ–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: ${imagesResult.rows[0].count}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ —Å –∞–≤–µ—Ä—Å–æ–º
        const aversResult = await pool.query(`
            SELECT COUNT(*) 
            FROM coin_catalog 
            WHERE avers_image IS NOT NULL
        `);
        console.log(`üñºÔ∏è –ó–∞–ø–∏—Å–µ–π —Å –∞–≤–µ—Ä—Å–æ–º: ${aversResult.rows[0].count}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ —Å —Ä–µ–≤–µ—Ä—Å–æ–º
        const reversResult = await pool.query(`
            SELECT COUNT(*) 
            FROM coin_catalog 
            WHERE revers_image IS NOT NULL
        `);
        console.log(`üñºÔ∏è –ó–∞–ø–∏—Å–µ–π —Å —Ä–µ–≤–µ—Ä—Å–æ–º: ${reversResult.rows[0].count}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:');
        const examplesResult = await pool.query(`
            SELECT id, coin_name, avers_image, revers_image
            FROM coin_catalog 
            WHERE avers_image IS NOT NULL OR revers_image IS NOT NULL
            LIMIT 5
        `);
        
        examplesResult.rows.forEach((row, index) => {
            console.log(`\n${index + 1}. ID: ${row.id}`);
            console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${row.coin_name}`);
            console.log(`   –ê–≤–µ—Ä—Å: ${row.avers_image ? '‚úÖ' : '‚ùå'}`);
            console.log(`   –†–µ–≤–µ—Ä—Å: ${row.revers_image ? '‚úÖ' : '‚ùå'}`);
            if (row.avers_image) {
                console.log(`   URL –∞–≤–µ—Ä—Å–∞: ${row.avers_image}`);
            }
            if (row.revers_image) {
                console.log(`   URL —Ä–µ–≤–µ—Ä—Å–∞: ${row.revers_image}`);
            }
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        const noImagesResult = await pool.query(`
            SELECT COUNT(*) 
            FROM coin_catalog 
            WHERE avers_image IS NULL AND revers_image IS NULL
        `);
        console.log(`\n‚ùå –ó–∞–ø–∏—Å–µ–π –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${noImagesResult.rows[0].count}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        console.log('\nüîç –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã coin_catalog:');
        const columnsResult = await pool.query(`
            SELECT column_name, data_type 
            FROM information_schema.columns 
            WHERE table_name = 'coin_catalog' 
            AND column_name LIKE '%image%'
            ORDER BY ordinal_position
        `);
        
        if (columnsResult.rows.length > 0) {
            columnsResult.rows.forEach(row => {
                console.log(`   - ${row.column_name}: ${row.data_type}`);
            });
        } else {
            console.log('   ‚ùå –ü–æ–ª—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error.message);
    } finally {
        await pool.end();
    }
}

checkCoinImages();


