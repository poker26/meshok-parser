const { Pool } = require('pg');
const config = require('./config');
const fs = require('fs');
const path = require('path');

async function updateImagePaths() {
    const pool = new Pool(config.dbConfig);
    
    try {
        console.log('üñºÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –≤ –ë–î...\n');
        
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞
        const result = await pool.query('SELECT id, auction_number, lot_number FROM coin_catalog ORDER BY id');
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${result.rows.length}`);
        
        let updatedCount = 0;
        let notFoundCount = 0;
        
        for (const row of result.rows) {
            const auctionNumber = row.auction_number;
            const lotNumber = row.lot_number;
            
            // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
            const aversPath = `catalog-images/avers_${auctionNumber}_${lotNumber}.jpg`;
            const reversPath = `catalog-images/revers_${auctionNumber}_${lotNumber}.jpg`;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
            const aversExists = fs.existsSync(aversPath);
            const reversExists = fs.existsSync(reversPath);
            
            if (aversExists || reversExists) {
                // –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                await pool.query(`
                    UPDATE coin_catalog 
                    SET avers_image_path = $1, revers_image_path = $2
                    WHERE id = $3
                `, [
                    aversExists ? aversPath : null,
                    reversExists ? reversPath : null,
                    row.id
                ]);
                
                updatedCount++;
                console.log(`‚úÖ ID ${row.id}: –ê—É–∫—Ü–∏–æ–Ω ${auctionNumber}, –õ–æ—Ç ${lotNumber} - ${aversExists ? '–∞–≤–µ—Ä—Å' : ''} ${reversExists ? '—Ä–µ–≤–µ—Ä—Å' : ''}`);
            } else {
                notFoundCount++;
                if (notFoundCount <= 5) { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5 –ø—Ä–∏–º–µ—Ä–æ–≤
                    console.log(`‚ùå ID ${row.id}: –ê—É–∫—Ü–∏–æ–Ω ${auctionNumber}, –õ–æ—Ç ${lotNumber} - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
                }
            }
        }
        
        console.log(`\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:`);
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${updatedCount}`);
        console.log(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${notFoundCount}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const checkResult = await pool.query(`
            SELECT 
                COUNT(*) as total,
                COUNT(avers_image_path) as with_avers,
                COUNT(revers_image_path) as with_revers
            FROM coin_catalog
        `);
        
        console.log(`\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
        console.log(`üìã –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${checkResult.rows[0].total}`);
        console.log(`üñºÔ∏è –° –∞–≤–µ—Ä—Å–æ–º: ${checkResult.rows[0].with_avers}`);
        console.log(`üñºÔ∏è –° —Ä–µ–≤–µ—Ä—Å–æ–º: ${checkResult.rows[0].with_revers}`);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—É—Ç–µ–π:', error.message);
    } finally {
        await pool.end();
    }
}

updateImagePaths();


