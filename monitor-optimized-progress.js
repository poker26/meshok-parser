const fs = require('fs');

function monitorProgress() {
    const progressFile = 'optimized_mass_update_progress.json';
    
    if (!fs.existsSync(progressFile)) {
        console.log('‚ùå –§–∞–π–ª –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    try {
        const data = JSON.parse(fs.readFileSync(progressFile, 'utf8'));
        const stats = data.stats;
        
        console.log('üìä –ü–†–û–ì–†–ï–°–° –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–û–ì–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø:');
        console.log('=====================================');
        
        if (stats.startTime) {
            const startTime = new Date(stats.startTime);
            const elapsed = Math.floor((new Date() - startTime) / 1000);
            const rate = stats.processed > 0 ? (stats.processed / elapsed * 60).toFixed(1) : 0;
            
            console.log(`‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${Math.floor(elapsed / 60)}–º ${elapsed % 60}—Å`);
            console.log(`üìà –°–∫–æ—Ä–æ—Å—Ç—å: ${rate} –ª–æ—Ç–æ–≤/–º–∏–Ω`);
        }
        
        console.log(`üî¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ª–æ—Ç–æ–≤: ${stats.processed}`);
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${stats.updated}`);
        console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${stats.skipped}`);
        console.log(`‚ùå –û—à–∏–±–æ–∫: ${stats.errors}`);
        console.log(`üèÜ –ê—É–∫—Ü–∏–æ–Ω–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${stats.auctionsProcessed}`);
        
        if (stats.processed > 0) {
            const updateRate = ((stats.updated / stats.processed) * 100).toFixed(1);
            console.log(`üìä –ü—Ä–æ—Ü–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${updateRate}%`);
        }
        
        console.log(`üïê –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${new Date(data.timestamp).toLocaleString('ru-RU')}`);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:', error.message);
    }
}

monitorProgress();
