const { Client } = require('pg');

const dbConfig = {
    user: 'postgres.xkwgspqwebfeteoblayu',        
    host: 'aws-0-eu-north-1.pooler.supabase.com',
    database: 'postgres',   
    password: 'Gopapopa326+',    
    port: 6543,
    ssl: {
        rejectUnauthorized: false
    }
};

async function analyzeConditionData() {
    const client = new Client(dbConfig);
    
    try {
        await client.connect();
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');
        
        // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        console.log('\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã auction_lots:');
        const structureQuery = `
            SELECT column_name, data_type, is_nullable 
            FROM information_schema.columns 
            WHERE table_name = 'auction_lots' 
            AND column_name IN ('condition', 'metal', 'weight')
            ORDER BY column_name;
        `;
        const structureResult = await client.query(structureQuery);
        console.table(structureResult.rows);
        
        // 2. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—é condition
        console.log('\nüìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—é condition:');
        const totalQuery = `
            SELECT 
                COUNT(*) as total_lots,
                COUNT(condition) as lots_with_condition,
                COUNT(*) - COUNT(condition) as lots_without_condition
            FROM auction_lots;
        `;
        const totalResult = await client.query(totalQuery);
        console.table(totalResult.rows);
        
        // 3. –¢–æ–ø-20 —Å–∞–º—ã—Ö —á–∞—Å—Ç—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π condition
        console.log('\nüèÜ –¢–æ–ø-20 —Å–∞–º—ã—Ö —á–∞—Å—Ç—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π condition:');
        const topQuery = `
            SELECT condition, COUNT(*) as count
            FROM auction_lots 
            WHERE condition IS NOT NULL 
            GROUP BY condition 
            ORDER BY count DESC 
            LIMIT 20;
        `;
        const topResult = await client.query(topQuery);
        console.table(topResult.rows);
        
        // 4. –ò—â–µ–º –∑–∞–ø–∏—Å–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –≥—Ä–∞–¥–∞—Ü–∏–∏ (—Ü–∏—Ñ—Ä—ã)
        console.log('\nüîç –ó–∞–ø–∏—Å–∏ —Å –≥—Ä–∞–¥–∞—Ü–∏—è–º–∏ (—Å–æ–¥–µ—Ä–∂–∞—Ç —Ü–∏—Ñ—Ä—ã):');
        const gradeQuery = `
            SELECT condition, COUNT(*) as count
            FROM auction_lots 
            WHERE condition ~ '[0-9]{2,3}' 
            GROUP BY condition 
            ORDER BY count DESC
            LIMIT 15;
        `;
        const gradeResult = await client.query(gradeQuery);
        console.table(gradeResult.rows);
        
        // 5. –ò—â–µ–º –∑–∞–ø–∏—Å–∏ —Å —Ç–∏–ø–∏—á–Ω—ã–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –±–µ–∑ –≥—Ä–∞–¥–∞—Ü–∏–π
        console.log('\nüìã –¢–∏–ø–∏—á–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–µ–∑ –≥—Ä–∞–¥–∞—Ü–∏–π:');
        const noGradeQuery = `
            SELECT condition, COUNT(*) as count
            FROM auction_lots 
            WHERE condition IS NOT NULL 
            AND condition !~ '[0-9]{2,3}'
            AND condition IN ('MS', 'AU', 'XF', 'VF', 'F', 'VG', 'G', 'AG', 'FA', 'PR')
            GROUP BY condition 
            ORDER BY count DESC;
        `;
        const noGradeResult = await client.query(noGradeQuery);
        console.table(noGradeResult.rows);
        
        // 6. –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º–∞—Ç–æ–≤ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä "MS 61")
        console.log('\nüî§ –ó–∞–ø–∏—Å–∏ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –º–µ–∂–¥—É —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –≥—Ä–∞–¥–∞—Ü–∏–µ–π:');
        const spaceQuery = `
            SELECT condition, COUNT(*) as count
            FROM auction_lots 
            WHERE condition ~ '[A-Z]{2,3}\\s+[0-9]{2,3}'
            GROUP BY condition 
            ORDER BY count DESC
            LIMIT 10;
        `;
        const spaceResult = await client.query(spaceQuery);
        console.table(spaceResult.rows);
        
        // 7. –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        console.log('\nüìù –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:');
        const examplesQuery = `
            SELECT id, lot_number, auction_number, condition, metal, coin_description
            FROM auction_lots 
            WHERE condition IS NOT NULL 
            ORDER BY RANDOM() 
            LIMIT 10;
        `;
        const examplesResult = await client.query(examplesQuery);
        console.table(examplesResult.rows);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error);
    } finally {
        await client.end();
        console.log('\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω');
    }
}

analyzeConditionData();
