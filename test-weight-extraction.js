const CatalogParser = require('./catalog-parser.js');

async function testWeightExtraction() {
    const parser = new CatalogParser();
    
    try {
        await parser.init();
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º –æ–ø–∏—Å–∞–Ω–∏–∏ —Å –≤–µ—Å–æ–º
        const testDescription = "–ö–æ–ø–µ–π–∫–∞. –ò–≤–∞–Ω IV –í–∞—Å–∏–ª—å–µ–≤–∏—á. –ü—Å–∫–æ–≤ Ag. | –û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω–∞—è —Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω–∞—è –†—É—Å—å - –ì–æ—Å—É–¥–∞—Ä—å –≤—Å–µ—è –†—É—Å–∏ –ò–≤–∞–Ω IV –í–∞—Å–∏–ª—å–µ–≤–∏—á –ì—Ä–æ–∑–Ω—ã–π –ö–æ–ø–µ–π–∫–∞. –î–∞—Ç–∏—Ä–æ–≤–∫–∞ ~1535-1547. –ß–µ–∫–∞–Ω–∫–∞ –≤ –ü—Å–∫–æ–≤–µ. –ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –≤–µ—Å 0.68 –≥—Ä.. –í.–ù. –ö–ª–µ—â–∏–Ω–æ–≤–∞, –ò.–í. –ì—Ä–∏—à–∏–Ω–∞, ‚Ññ# 74.";
        
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –≤–µ—Å–∞ –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è...\n');
        console.log(`üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${testDescription.substring(0, 100)}...\n`);
        
        // –ü–∞—Ä—Å–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ
        const parsedData = parser.parseLotDescription(testDescription);
        
        console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞:');
        console.log(`  - –ú–µ—Ç–∞–ª–ª: ${parsedData.metal || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
        console.log(`  - –í–µ—Å –º–æ–Ω–µ—Ç—ã: ${parsedData.coin_weight || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}–≥`);
        console.log(`  - –ü—Ä–æ–±–∞: ${parsedData.fineness || '–Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}`);
        console.log(`  - –ß–∏—Å—Ç—ã–π –º–µ—Ç–∞–ª–ª: ${parsedData.pure_metal_weight || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}–≥`);
        console.log(`  - –í–µ—Å –≤ —É–Ω—Ü–∏—è—Ö: ${parsedData.weight_oz || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}oz`);
        
        console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    } finally {
        await parser.close();
    }
}

testWeightExtraction();
