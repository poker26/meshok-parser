const MetalsPriceService = require('./metals-price-service');

async function loadMetalsData2025() {
    const service = new MetalsPriceService();
    
    try {
        console.log('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ü–µ–Ω–∞—Ö –Ω–∞ –º–µ—Ç–∞–ª–ª—ã —Å 01.01.2025...');
        
        const startDate = new Date('2025-01-01');
        const endDate = new Date('2025-09-17'); // –î–æ —Å–µ–≥–æ–¥–Ω—è
        
        let currentDate = new Date(startDate);
        let loadedCount = 0;
        let skippedCount = 0;
        let errorCount = 0;
        
        const totalDays = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24));
        let processedDays = 0;
        
        while (currentDate <= endDate) {
            const dateStr = currentDate.toISOString().split('T')[0];
            processedDays++;
            
            try {
                console.log(`üìÖ [${processedDays}/${totalDays}] –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ ${dateStr}...`);
                
                // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                const priceData = await service.getPriceData(dateStr);
                
                if (priceData && priceData.metals) {
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    const saved = await service.saveToDatabase(priceData);
                    
                    if (saved) {
                        console.log(`   ‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã`);
                        console.log(`      - USD: ${priceData.usdRate}`);
                        console.log(`      - –ó–æ–ª–æ—Ç–æ: ${priceData.metals.gold} ‚ÇΩ/–≥`);
                        console.log(`      - –°–µ—Ä–µ–±—Ä–æ: ${priceData.metals.silver} ‚ÇΩ/–≥`);
                        console.log(`      - –ü–ª–∞—Ç–∏–Ω–∞: ${priceData.metals.platinum} ‚ÇΩ/–≥`);
                        console.log(`      - –ü–∞–ª–ª–∞–¥–∏–π: ${priceData.metals.palladium} ‚ÇΩ/–≥`);
                        loadedCount++;
                    } else {
                        console.log(`   ‚è≠Ô∏è –î–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç`);
                        skippedCount++;
                    }
                } else {
                    console.log(`   ‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã`);
                    skippedCount++;
                }
                
                // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (500–º—Å)
                await new Promise(resolve => setTimeout(resolve, 500));
                
            } catch (error) {
                console.log(`   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞ ${dateStr}:`, error.message);
                errorCount++;
            }
            
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–Ω—é
            currentDate.setDate(currentDate.getDate() + 1);
        }
        
        console.log(`\nüìä –ò—Ç–æ–≥–æ:`);
        console.log(`   ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π: ${loadedCount}`);
        console.log(`   ‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount}`);
        console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
        console.log(`   üìÖ –í—Å–µ–≥–æ –¥–Ω–µ–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${processedDays}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –º–µ—Å—è—Ü–∞–º
        console.log(`\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º:`);
        const months = ['–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å', 
                       '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å'];
        
        for (let month = 0; month < 9; month++) {
            const monthStart = new Date(2025, month, 1);
            const monthEnd = new Date(2025, month + 1, 0);
            const monthDays = monthEnd.getDate();
            
            console.log(`   ${months[month]} 2025: ${monthDays} –¥–Ω–µ–π`);
        }
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    } finally {
        await service.close();
    }
}

loadMetalsData2025();
